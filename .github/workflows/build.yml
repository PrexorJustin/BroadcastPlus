name: Build

on:
  workflow_dispatch:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Gets full git history for versioning

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/wrapper
            ~/.gradle/caches/modules-2/files-2.1
          key: ${{ runner.os }}-gradle-${{ hashFiles('gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper

      - name: Add COMMIT_HASH environment variable
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Extract Version
        run: echo "VERSION=$(./gradlew -q printVersion)" >> $GITHUB_ENV

      - name: Build with Gradle (Including Shadow JAR)
        run: ./gradlew clean build shadowJar

      - name: Test with Gradle
        run: ./gradlew test

      - name: List build/libs directory
        run: ls -l build/libs  # Ensure the shadow JAR exists

      - name: Create Release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          generate_release_notes: true
          draft: false
          prerelease: false

      - name: Upload Shadow JAR to Release
        if: github.ref == 'refs/heads/main'
        run: |
          # Find the shadow JAR file (without version number in the name)
          for jar in $(find . -type f -name "*-all.jar" -path "*/build/libs/*"); do
            echo "Uploading $jar"
            gh release upload v${{ env.VERSION }} "$jar"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
